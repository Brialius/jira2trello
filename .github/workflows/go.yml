name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linter:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
              
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@v1.3
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         with:
#           projectBaseDir: .
      
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v1.2.1
        with:
          version: v1.30

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ 'darwin', 'linux', 'windows' ]
        goarch: [ 'amd64' ]
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -v -o jira2trello-${{ matrix.goos }}-${{ matrix.goarch }}\$GOEXE .
        ls -la
        zip --junk-paths jira2trello-${{ matrix.goos }}-${{ matrix.goarch }} jira2trello-${{ matrix.goos }}-${{ matrix.goarch }}\$GOEXE

#     - name: Upload a Build Artifact
#       uses: actions/upload-artifact@v2
#       with:
#         path: 'jira2trello-*.zip'

#       - name: Build project # This would actually build your project, using zip for an example artifact
#         run: |
#           zip --junk-paths my-artifact README.md

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'test-release'
        release_name: Release test
        draft: true
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./jira2trello-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        asset_name: jira2trello-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        asset_content_type: application/zip
