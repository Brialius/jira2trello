name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build
    needs: [release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ 'darwin', 'linux', 'windows' ]
        goarch: [ 'amd64', '386', 'arm', 'arm64' ]
        exclude:
          - goos: darwin
            goarch: '386'
          - goos: darwin
            goarch: arm
          - goos: windows
            goarch: arm64

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        make build
        zip --junk-paths jira2trello-${{ matrix.goos }}-${{ matrix.goarch }} bin/jira2trello`go env GOEXE`

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./jira2trello-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        asset_name: jira2trello-${{ matrix.goos }}-${{ matrix.goarch }}.zip
        asset_content_type: application/zip
